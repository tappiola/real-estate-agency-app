name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: eu-west-2
  AWS_ROLE: arn:aws:iam::208822006106:role/GithubActions
  VERSION: 0.0.${{ github.run_number }}-${{ github.sha }}

jobs:
  build_backend:
    name: Build - Backend
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: backend
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/real-estate-backend:${{ env.VERSION }}

  build_frontend:
    name: Build - Frontend
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/real-estate-frontend:${{ env.VERSION }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build_backend
      - build_frontend
    permissions:
      id-token: write
    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform - Init
        run: terraform init

      - name: Terraform - Plan
        run: terraform plan -var "app_version=${{ env.VERSION }}" -out=tfplan

      - name: Terraform - Apply
        run: terraform apply -auto-approve tfplan
